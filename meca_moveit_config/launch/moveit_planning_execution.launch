<?xml version="1.0"?>
<launch>
  <!-- The planning and execution components of MoveIt! configured to run -->
  <!-- using the ROS-Industrial interface. -->
  <arg name="use_gui" default="true" />
  <!-- Non-standard joint names:
       - Create a file meca_moveit_config/config/joint_names.yaml
           controller_joint_names: [joint_1, joint_2, ... joint_N] 
       - Update with joint names for your robot (in order expected by rbt controller)
       - and when you are done uncomment the following line:-->
  <rosparam command="load" file="$(find meca_moveit_config)/config/joint_names.yaml"/> 


  <!-- the "sim" argument controls whether we connect to a Simulated or Real robot -->
  <!--  - if sim=false, a robot_ip argument is required -->
  <arg name="sim" default="false" />
  <arg name="use_rviz" default="true" />
  <!-- <arg name="robot_ip" unless="$(arg sim)" />  add default-->
 
  <!-- load the robot_description parameter before launching ROS-I nodes -->
  <include file="$(find meca_moveit_config)/launch/planning_context.launch" >
    <arg name="load_robot_description" value="true" />
  </include>

  <!-- run the robot simulator and action interface nodes -->
  <group if="$(arg sim)">
    <include file="$(find industrial_robot_simulator)/launch/robot_interface_simulator.launch" />
  </group>

  <!-- run the "real robot" interface nodes -->
  <!--   - this typically includes: robot_state, motion_interface, and joint_trajectory_action nodes -->
  <!--   - replace these calls with appropriate robot-specific calls or launch files -->
  <group unless="$(arg sim)">

    <remap from="/follow_joint_trajectory" to="joint_trajectory_action"/>
    <node pkg="industrial_robot_client" type="joint_trajectory_action" name="joint_trajectory_action"/>
    <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> -->

    <!--include file="$(find [robot_interface_pkg])/launch/robot_interface.launch" >
      <arg name="robot_ip" value="$(arg robot_ip)"/>
    </include -->
  </group>
<node pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" name="joint_state_publisher_gui" output="screen" if="$(arg use_gui)" >
      <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
    </node>
  <!-- publish the robot state (tf transforms) -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <include file="$(find meca_moveit_config)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
  </include>

  <include file="$(find meca_moveit_config)/launch/moveit_rviz.launch" if="$(arg use_rviz)">
    <arg name="rviz_config" value="$(find meca_moveit_config)/launch/moveit.rviz"/>
  </include>
  

</launch>
